* Table of Contents :TOC_4_gh:noexport:
- [[#kernel][kernel]]
- [[#手机audio][手机audio]]
- [[#多按钮耳机控制][多按钮耳机控制]]
- [[#jackheadset类型][jack&headset类型]]
- [[#mbhc检测来自耳机和耳机的事件包括插入移除和耳机按钮按下并释放][MBHC检测来自耳机和耳机的事件，包括插入，移除和耳机按钮按下并释放]]
- [[#设置jack类型][设置jack类型]]
- [[#外部电容设置][外部电容设置]]
- [[#mbhc-按键配置][MBHC 按键配置]]
- [[#音质][音质]]
- [[#playback][playback]]
- [[#audio-recording][Audio recording]]
- [[#参考文档][参考文档]]

* kernel
  msm8x16_wcd_registers.h
  kernel/msm-3.18/sound/soc/msm/msm8952.c  => qcom,msm8952-audio-codec
  kernel/msm-3.18/sound/soc/codecs/msm8x16-wcd.c => qcom,msm8x16_wcd_codec    #内部解码器
  kernel/msm-3.18/sound/soc/codecs/wcd9335.c => qcom,msm8x16_wcd_codec    #外部解码器
  kernel/msm-3.18/sound/soc/codecs/wsa881x-analog.c => qcom,wsa881x-i2c-codec #放大器
  kernel/msm-3.18/sound/soc/msm/qdsp6v2/msm-pcm-routing-v2.c => qcom,msm-pcm-routing #通道
  kernel/msm-3.18/sound/soc/codecs/wcd-mbhc-v2.c       #Multibutton Headset Control
  CONFIG_SND_SOC_MSM8X16

  snd-soc-msm8x16-objs := msm8952.o msm-audio-pinctrl.o
  snd-soc-msm8x16-objs += msm8952-slimbus.o msm8952-dai-links.o
  obj-$(CONFIG_SND_SOC_MSM8X16) += snd-soc-msm8x16.o
* 手机audio
  Microphone(MIC)     麦克风
  Speaker(SPK)        扬声器
  --Sub
  MIC -- Main
  RECEIVER
  headset 耳机
  handset 听筒
  jack耳机的意思
* 多按钮耳机控制
* jack&headset类型
  + jack类型
    normally-closed type    nc
    normally-open type      no
    对于NC型插座，当没有插入插头时，HPH-L和HS-DET引脚通过插孔上的机械开关连接。
    对于NO型插座，当插头没有插入时，HPH-L和HS-DET引脚断开
    在常闭型（NC）中，不接耳机时，耳机座左声道和检测端HS-DET接触，HS-DET为低电平；插入耳机时，HS-DET与HPH-L不导通，HS-DET为高电平；
    在常开型（NO）中，不接耳机时，耳机座左声道和检测端HS-DET不接触，HS-DET为高电平；插入耳机时，HS-DET与HPH-L导通，HS-DET为低电平；
  + 国标/美标
    美标白色、欧标为黑色
    | 国际标/美标(CTIA) | 国标/欧标(OMTP) |
    |-------------------+-----------------|
    | MIC               | GND             |
    | GND               | MIC             |
    | R                 | R               |
    | L  (尖头)         | L(尖头)         |
* MBHC检测来自耳机和耳机的事件，包括插入，移除和耳机按钮按下并释放
    多按钮耳机控制(MBHC)是硬件编解码器的一项功能。MBHC检测来自耳机和耳机的事件，包括插入，移除和耳机按钮按下并释放;配置插入耳机类型
    机械插入/移除检测，无需额外的GPIO分配
    插头类型检测 （3极耳机/4极耳机）(美国/欧盟耳机)
    复杂按钮检测：通过检测GND和MIC引脚之间的阻抗，不同的按键类型对应不同的阻抗。
    耳机阻抗检测
* 设置jack类型
    qcom,msm-mbhc-hphl-swh = <0>;   #(0 for NC, 1 for NO) 外部电容设置
    #+begin_src cpp
    enum snd_jack_types {
        SND_JACK_HEADPHONE	= 0x0000001,    //三段式耳机
        SND_JACK_MICROPHONE	= 0x0000002,    //耳麦
        SND_JACK_HEADSET	= SND_JACK_HEADPHONE | SND_JACK_MICROPHONE,//四段式耳机(包含耳机和mic)
        SND_JACK_LINEOUT	= 0x0000004,
        SND_JACK_MECHANICAL	= 0x0000008, /* If detected separately */
        SND_JACK_VIDEOOUT	= 0x0000010,
        SND_JACK_AVOUT		= SND_JACK_LINEOUT | SND_JACK_VIDEOOUT,
        SND_JACK_LINEIN		= 0x0000020,
        SND_JACK_OC_HPHL	= 0x0000040,
        SND_JACK_OC_HPHR	= 0x0000080,
        SND_JACK_UNSUPPORTED	= 0x0000100,
        SND_JACK_MICROPHONE2    = 0x0000200,
        SND_JACK_ANC_HEADPHONE = SND_JACK_HEADPHONE | SND_JACK_MICROPHONE | SND_JACK_MICROPHONE2, }
    #+end_src
* 外部电容设置
* MBHC 按键配置
  static struct wcd_mbhc_config mbhc_cfg //主要配置按键值(KEY_MEDIA、 KEY_VOLUMEUP、KEY_VOLUMEDOWN)
* 音质
  | 失真类型 | 详解 |
  |----------+------|
  | 削波失真 |      |
  | 爆音     |      |
  | 削顶     |      |
  | 擦音圈   |      |
  | 箱声过重 |      |
  | 漏气     |      |
  | 频段塌陷 |      |
  | 频率变形 |      |
* playback
  | 名称                               | 场景                                                                                                    |
  |------------------------------------+---------------------------------------------------------------------------------------------------------|
  | ~Deep Buffer mode playback~        | 默认音乐播放模式                                                                                        |
  | ~Low Latency mode playback~        | 触摸音，警报音等以最小延迟播放。 此模式用于游戏音调; 基本上任何使用OpenSL API的东西都可以通过这条路径。 |
  | ~Compressed Offload mode playback~ | APSS将大量编码数据缓冲区（在DSP中进行解码）发送到DSP，然后进入低功耗状态，间歇性唤醒以提供更多数据      |
  |Low Latency|LL|
  |Ultra-Low Latency|ULL|
* Audio recording
  | 名称                              | 场景                                                                                                                  |
  |-----------------------------------+-----------------------------------------------------------------------------------------------------------------------|
  | ~Normal recording(正常录音)~      | 支持的默认录制模式，可以根据硬件功能使用软件或硬件编码器。                                                            |
  | ~Tunnel mode recording(隧道录音)~ | 编码由硬件编码器执行，DSP在累积足够的记录介质后向用户空间发送大缓冲区。 目前，在QTI芯片组上，此模式仅支持AMR WB记录。 |
* 参考文档
  80_NL239_27_D_APPLICATION_NOTE__MULTIBUTTON_HEADSE.pdf      (Multibutton Headset Control)
  KBA-170109193748 How to check echo reference signal over MI2S
  80-na157-193_f_linux_android_audio_customization_and_debugging_guide.pdf 客制化

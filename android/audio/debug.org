* Table of Contents :TOC_4_gh:noexport:
- [[#kernel][kernel]]
- [[#logcat][logcat]]
- [[#deep-buffer-playback][deep buffer playback]]
- [[#特定应用场景开启相应log][特定应用场景，开启相应Log]]
- [[#debugging技巧][Debugging技巧]]
- [[#usb][usb]]
- [[#bluetooth][Bluetooth]]
- [[#tools][tools]]
- [[#dumpsys][dumpsys]]
- [[#关键log][关键log]]
- [[#log_tag][LOG_TAG]]

* kernel
  echo -n "file msm-pcm-routing-v2.c +p" > /sys/kernel/debug/dynamic_debug/control
  echo -n "file msm-pcm-voice-v2.c +p" > /sys/kernel/debug/dynamic_debug/control
  echo -n "file msm-dai-q6-v2.c +p" > /sys/kernel/debug/dynamic_debug/control
  echo -n "file q6voice.c +p" > /sys/kernel/debug/dynamic_debug/control
  echo -n "file q6adm.c +p" > /sys/kernel/debug/dynamic_debug/control
  echo -n "file q6afe.c +p" > /sys/kernel/debug/dynamic_debug/control
  echo -n "file q6asm.c +p" > /sys/kernel/debug/dynamic_debug/control
  echo -n "file soc-core.c +p" > /sys/kernel/debug/dynamic_debug/control
  echo -n "file soc-dapm.c +p" > /sys/kernel/debug/dynamic_debug/control
  echo -n "file soc-pcm.c +p" > /sys/kernel/debug/dynamic_debug/control
  echo -n "file msm8x16-wcd.c +p" > /sys/kernel/debug/dynamic_debug/control
  或者在文件开始地方定义#define DEBUG,机子开机时就吐log
* logcat
  + Enable below logs and capture a logcat log
    #define LOG_NDEBUG 0
    #define VERY_VERY_VERBOSE_LOGGING ===> add these two definitions in these files.
    frameworks/av/media/libmedia/AudioTrack.cpp or
    frameworks/av/media/libaudioclient/AudioTrack.cpp (Android O)
    frameworks/av/media/libmedia/AudioRecord.cpp or
    frameworks/av/media/libaudioclient/AudioRecord.cpp (Android O)
    +#include <utils/CallStack.h>
    status_t AudioTrack::set(
    {
    "frameworks/av/media/libaudioclient/AudioTrack.cpp"
    #include <utils/CallStack.h>;
    ......
    +android::CallStack cs("haha");
    .........
    }
  + APM(Audio policy manager)
    #define LOG_NDEBUG 0
    #define VERY_VERBOSE_LOGGING
    frameworks/av/services/audiopolicy/service/AudioPolicyService.cpp
    frameworks/av/services/audiopolicy/service/AudioPolicyInterfaceImpl.cpp
    frameworks/av/services/audiopolicy/managerdefault/AudioPolicyManager.cpp
    frameworks/av/services/audiopolicy/enginedefault/src/Engine.cpp or
    frameworks/av/services/audiopolicy/engineconfigurable/src/Engine.cpp
    frameworks/av/services/audiopolicy/common/managerdefinitions/src/Gains.cpp
    hardware/qcom/audio/policy_hal/AudioPolicyManager.cpp or
    vendor/qcom/opensource/audio/policy_hal/AudioPolicyManager.cpp
  + HAL
    #define LOG_NDEBUG 0
    #define VERY_VERY_VERBOSE_LOGGING
    hardware/qcom/audio/hal/audio_hw.c
    hardware/qcom/audio/hal/msm8916/platform.c
    hardware/qcom/audio/hal/platform_info.c
    hardware/qcom/audio/hal/audio_extn/usb.c
    hardware/qcom/audio/hal/audio_extn/audio_extn.c
    hardware/qcom/audio/hal/audio_extn/spkr_protection.c
    hardware/qcom/audio/hal/audio_extn/a2dp.c
    system/media/audio_route/audio_route.c                    #audio_route
    @@ -579,6 +579,7 @@ int audio_route_apply_path(struct audio_route *ar, const char *name)
    }
    path_apply(ar, path);
    + path_print(ar, path);

      return 0;
      }
  + HAL
    vendor/qcom/proprietary/mm-audio/audio-log-utils
    开启hal层bug的接口
* deep buffer playback
  #define LOG_NDEBUG 0
  #define VERY_VERY_VERBOSE_LOGGING ===> add these two definitions in these files.
  #define LOG_NDEBUG 0
  #define VERY_VERBOSE_LOGGING
  #define LOG_NDEBUG 0
  #define VERY_VERY_VERBOSE_LOGGING
  + Media
    frameworks/base/media/java/android/media/MediaPlayer.java #MediaPlayer
    frameworks/av/media/libaudioclient/AudioRecord.cpp #AudioRecord 录音
    frameworks/av/media/libaudioclient/AudioSystem.cpp #AudioSystem
    frameworks/av/media/libaudioclient/AudioTrack.cpp  #AudioTrack 播放音乐
    frameworks/av/media/libmediaplayerservice/MediaPlayerService.cpp #MediaPlayerService
    frameworks/av/media/libmedia/mediaplayer.cpp        #MediaPlayerNative
    frameworks/av/media/libmedia/IOMX.cpp               #IOMX 编解码
    frameworks/av/media/libstagefright/AudioPlayer.cpp  #AudioPlayer
    frameworks/av/media/libstagefright/FileSource.cpp   #FileSource
    frameworks/av/media/extractors/mp3/MP3Extractor.cpp #MP3Extractor
    frameworks/av/media/libstagefright/OMXClient.cpp    #OMXClient
  + AudioFlinger
    frameworks/av/services/audioflinger/AudioFlinger.cpp #AudioFlinger
    frameworks/av/media/libaudioprocessing/AudioMixer.cpp #AudioMixer
  + APM
    frameworks/av/services/audiopolicy/service/AudioPolicyService.cpp #AudioPolicyService
    frameworks/av/services/audiopolicy/service/AudioPolicyInterfaceImpl.cpp #AudioPolicyIntefaceImpl
    frameworks/av/services/audiopolicy/managerdefault/AudioPolicyManager.cpp #APM_AudioPolicyManager
    frameworks/av/services/audiopolicy/enginedefault/src/Engine.cpp or #APM::AudioPolicyEngine
    frameworks/av/services/audiopolicy/engineconfigurable/src/Engine.cpp #APM::AudioPolicyEngine
    frameworks/av/services/audiopolicy/common/managerdefinitions/src/Gains.cpp #APM::Gains
  + hal
    hardware/qcom/audio/hal/audio_hw.c #audio_hw_primary
    hardware/qcom/audio/hal/msm8916/platform.c #msm8916_platform
    hardware/qcom/audio/hal/msm8916/hw_info.c #hardware_info
    vendor/qcom/opensource/audio/policy_hal/AudioPolicyManager.cpp #AudioPolicyManagerCustom
  + kernel
    echo file msm-pcm-q6-v2.c +p > /sys/kernel/debug/dynamic_debug/control
    echo file msm-pcm-routing-v2.c +p > /sys/kernel/debug/dynamic_debug/control
    echo file q6afe.c +p > /sys/kernel/debug/dynamic_debug/control
    echo file q6adm.c +p > /sys/kernel/debug/dynamic_debug/control
    echo file q6asm.c +p > /sys/kernel/debug/dynamic_debug/control
    echo file audio_acdb.c +p > /sys/kernel/debug/dynamic_debug/control
  + getlog
    adb logcat –c && adb logcat –v threadtime | tee logcat.txt
  + 参考文档
    80-na157-193_f_linux_android_audio_customization_and_debugging_guide.pdf
* 特定应用场景，开启相应Log
  + For debugging codec-related issues during audio bringup:
    wcd9xxx-core.c
    wcd9xxx-irq.c
    wcd9xxx-mbhc.c
    wcd9xxx-resmgr.c
  + For debugging HDMI-related issues during audio bringup:
    msm-dai-q6-hdmi-v2.c
    q6afe.c
  + For debugging AUX PCM-related issues during audio bringup:
    msm-dai-q6-v2.c
  + For debugging USB audio and WFD-related issues during audio bringup:
    msm-pcm-afe-v2.c
* Debugging技巧
  + 在初始bringup音频期间，以下内容已得到验证:
    检查DSP是否启动
    检查SLIMbus是否启动
    检查声卡是否已注册
    使用tinymix，tinycap和tinyplay命令验证播放和录制
  + 使用adb命令读写codec寄存器:
    adb root
    adb remount
    adb shell mount -t debugfs debugfs /sys/kernel/debug
    adb shell
    cd /d/asoc/msm8952-sku2-snd-card/codec:msm8x16_wcd_codec-2
    cat codec_reg   #读取
    echo "0x121 0xA0" > codec_reg  #写入
  + Codec register dumps and MBHC calibration data:
    adb shell cat /sys/kernel/debug/asoc/*snd-card/*codec/codec_reg >codecreg.txt
    Read:cat codecreg
    Write:echo "<Adress> <value>" > codec_reg
    adb shell cat /sys/kernel/debug/wcd9xxx_mbhc > mbhc_data.txt
  + For digital codec
    adb shell cat /d/regmap/msm_digital_codec/registers > digital_codec_660_reg.txt
    For Analog codec
        adb shell cat /d/regmap/spmi0-03/registers > analog_codec_660_reg.txt
  + 使acdb生效方法
    重启手机，或重启媒体服务器
    adb shell
    ps -elf |grep mediaserver
    kill <mediaserver pid>
  + 用ADIE设置寄存器
    使用adb命令配置ADIE寄存器
    adb root
    adb remount
    adb shell "chmod 777 /sys/kernel/debug/asoc/*snd-card/*codec/codec_reg"
    然后QACT ADIE，进行设置
  + 查看adsp版本
    adb pull /firmware/image/adsp.b04
    strings adsp.b04 | grep "Q6_BUILD"
* usb
* Bluetooth
    system/bt/audio_a2dp_hw/src/audio_a2dp_hw.cc #bt_a2dp_hw
    bt_a2dp_hw MediaRouter
* tools
  Adboe Audition或者CoolEdit等音频处理工具获取问题发生的时间戳
  QCAT解析QXDM日志
  QXDM抓取Log
  QACT调试acdb
  tinymix/tinycap/tinyplay/tinypcminfo
  mm-audio-ftm
  sox -t raw -c 1 -e signed-integer -b 16 -r 16000 test.pcm test.wav
* dumpsys
  audio
  media.audio_flinger
  media.audio_policy
  media.player
* 关键log
* LOG_TAG
  + frameworks/av/services/audioflinger
    "AudioFlinger"
  + frameworks/av/services/audiopolicy
    "APM"
  + system/media/audio_route
    "audio_route"
* 抓取audio相关的ftrace
    Example to collect traces having audio tag:
    $>adb shell atrace -z -b 8196 audio sched freq load idle irq -t 10 > atrace_output
    Parse atrace_output to get systrace logs:
    $>python external/chromium-trace/systrace.py --from-file=atrace_output -o trace.html
    external/chromium-trace/systrace.py -b 32768 -t 15 audio hal sched freq load idle irq disk
